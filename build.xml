<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>

<project name="MeDs Movie Manager Project" default="Welcome"
	basedir="">
	<description>
		MeDs Movie Manager build file
  </description>



	<target name="Welcome">
<echo>
	===========================================
	====   MeD's Movie Manager build.xml   ====
	===========================================
	 Targets:
	===========================================
	 clean     - clears all generated files
	 compile   - compiles all java files
	 run       - runs the moviemanager
	
	 jar       - creates the MovieManager.jar
	 IMDb-lib  - creates the IMDb.jar
     jars      - runs jar and IMDb-lib  
	 build     - calls compile, jars
	 all       - calls clean, build, archives, izpack
	 archives  - creates the zip distribution files
	 izpack    - creates the izpack java installer
	 build-mac - create Mac Application Bundle
	 dist-mac  - create Mac DMG file
	 javadoc   - compiles the Javadoc
	 changelog - compiles the changelog to HTML
	 readme    - compiles the readme to HTML
	</echo>
	</target>

	<!-- set global properties for this build -->

	<property name="build" location="MovieManager/" />
	<property name="dist" location="dist" />
	<property name="izpack.dir" location="packaging/izpack" />

	<property name="version" value="2.8.8" />
	<property name="versionName" value="${version}" />

	<property name="base" value="MovieManager/" />

	<property name="ant-contrib-path" value="MovieManager/lib/ant-contrib-0.6.jar" />
	
	<property name="jasperFiles" value="*.jasper, *.png, *.jrxml" />

	<property name="mainFiles"
		value="MovieManager.exe, MovieManager.jar, Applet.html, Icon.ico" />

	<property name="infoFiles"
		value="License/, Readme.html, Changelog.html" />

	 <property name="libraries_look_and_feel"
	     value="
	     LookAndFeels/CLooks_13.jar,
	     LookAndFeels/EaSynthLookAndFeel-1.06.jar,
	     LookAndFeels/InfoNode-1.6.1.jar,
	 	 LookAndFeels/JGoodies-2.3.0.jar,
	     LookAndFeels/JTattoo-1.3.2.jar,
	     LookAndFeels/kunststoff.jar,
	     LookAndFeels/lipstikLF-1.1.jar,
	     LookAndFeels/liquidlnf-2.9.1.jar,
	     LookAndFeels/nimrodlf-1.1a.jar,
	     LookAndFeels/OfficeLnFs_2.7.jar,
	     LookAndFeels/PgsLookAndFeel-1.1.jar,
	     LookAndFeels/squareness.2.3.0.jar,
	     LookAndFeels/substance-5.3.jar,
	     LookAndFeels/synthetica-2.9.1.jar,
	     LookAndFeels/syntheticaBlackMoon_2.6.1.jar,
	     LookAndFeels/syntheticaBlackStar_2.6.1.jar,
	     LookAndFeels/syntheticaBlueIce_2.6.1.jar,
	     LookAndFeels/syntheticaBlueMoon_2.6.1.jar,
	     LookAndFeels/syntheticaBlueSteel_2.6.1.jar,
	     LookAndFeels/syntheticaGreenDream_2.6.1.jar,
	     LookAndFeels/syntheticaSilverMoon_2.6.1.jar,
	     LookAndFeels/Skinlf_Theme_Packs/
	     "/>
	
	<property name="libraries"
		value="cobra/cobra-0.98.2.jar,
		   cobra/js.jar,
		   drivers/hsqldb-1.7.3.3.jar,
		   drivers/mysql-connector-java-5.1.7-bin.jar,
		   mac/AppleJavaExtensions.jar,
		   mac/quaqua.jar,
		   mac/libquaqua.jnilib,
		   BrowserLauncher2-1_3.jar,
		   castor-1.2.jar,
		   commons-digester-1.7.jar,
	       commons-collections-3.2.jar,
		   commons-beanutils.jar,
	       commons-httpclient-3.0.1.jar,
		   commons-logging-1.1.jar,
	       commons-codec-1.3.jar,
		   gettext-commons-0.9.jar,
		   itext-1.4.5.jar ,
		   jasperreports-3.0.0.jar,
		   jna-3.2.4.jar,
		   jxl.jar,
		   log4j-1.2.15.jar,
		   ostermillerutils_1_05_00_for_java_1_4.jar,
		   poi-2.5.1-final-20040804.jar,
		   ProportionLayout.jar,
		   Required-libraries.txt,
		   skinlf.jar,
		   TableLayout.jar,
		   useful.jar,
		   xercesImpl.jar,
		   xml-apis.jar,
		   IMDb.jar
		   " />
	
    <property name="libraries_windows"
      value="
        MediaInfo/x86/MediaInfo.dll,
        MediaInfo/amd64/MediaInfo.dll
    "/>
    	
	<property name="library_file_list_all"
	value="${libraries_look_and_feel}, ${libraries}, ${libraries_windows}
	"/>
	
	<property name="library_file_list_mac"
	    value="${libraries_look_and_feel}, ${libraries}
	"/>
	       
	
	<property name="template_files"
		value="Simple_Virtue/Simple_Virtue.css,
		   Simple_Virtue/Simple_Virtue.html,
		   Simple_Virtue/template.txt,
		   Simple_Virtue/Styles/A_Touch_of_Blue.css,
		   Simple_Virtue/Styles/A_Touch_of_Blue.style.txt,
		   Simple_Virtue/Styles/A_Touch_of_Green.css,
		   Simple_Virtue/Styles/A_Touch_of_Green.style.txt,
		   Simple_Virtue/Styles/Blue_Motion.css,
		   Simple_Virtue/Styles/Blue_Motion.png,
		   Simple_Virtue/Styles/Blue_Motion.style.txt,
		   Simple_Virtue/Styles/Dark_Inferno.css,
		   Simple_Virtue/Styles/Dark_Inferno.png,
		   Simple_Virtue/Styles/Dark_Inferno.style.txt,
		   Simple_Virtue/Styles/Silver_Flower.css,
		   Simple_Virtue/Styles/Silver_Flower.png,
		   Simple_Virtue/Styles/Silver_Flower.style.txt
		   "/>


	<!--	   log4j.properties, -->
	<property name="config_file_list"
		value="castor.properties,
		   mapping.xml,
		   MovieManager.tmx,
		   Temp.mdb
		   " />

	<!-- <property name="$(base)/base.dir"  location=""/> -->
	<property name="source" value="${base}/source/" />

	<path id="izpack.claspath">
		<fileset dir="${izpack.dir}/lib/">
			<include name="*.jar" />
		</fileset>
	</path>


	<path id="project.lib.path">
		<fileset dir="${base}/lib/">
			<include name="**/*.jar" />
			<include name="**/**/*.jar" />
			<include name="*.jar" />
		</fileset>
	</path>


	<path id="project.classpath">
		<pathelement path="${classes}" />
		<path refid="project.lib.path" />
	</path>


	<target name="run" depends="compile" description="Runs the compiled moviemanager">
		<java classname="net.sf.xmm.moviemanager.MovieManager"
			classpathref="project.lib.path" classpath="MovieManager/" fork="true"
			spawn="true" />
	</target>


	<target name="compile" description="Compiles code, output goes to the build dir.">
		<javac srcdir="MovieManager/source" classpathref="project.classpath"
			destdir="${build}" source="1.5" target="1.5">
		</javac>
	</target>




	<target name="all" description="generate the distribution">

		<!-- Cleans up  first -->
		<antcall target="clean" />

		<!-- Create the distribution directory -->
		<echo>Creating directory:${dist}</echo>

		<!-- Builds the thing -->
		<antcall target="build" />

		<echo>Creating arhcives...</echo>
		<antcall target="archives" />

		<echo>Creating Izpack Installer...</echo>
		<antcall target="izpack" />

	</target>


	<target name="build" description="generate the distribution"
		depends="compile, jars">
		<tstamp />

	</target>


	<target name="predist" description="Execute before using the dist directory" depends="build">
	  <mkdir dir="${dist}" />
	  <antcall target="makeLookAndFeelIni" />
	  <antcall target="makeLog4jProperties" />
	  <antcall target="makeEclipseProjectFiles" />
	  <antcall target="IMDb-lib" />
	</target>


	<target name="archives" description="Creates the ZIP archives."
		depends="predist">
	  
		<!-- Creating Binary zip MovieManager.v.version.bin.zip  Mirror  -->
		<zip destfile="${dist}/MovieManager.v.${versionName}.bin.zip"
			update="false" compress="true">


			<!-- Files in root dir (install dir)  -->
			<zipfileset prefix="MeDs-Movie-Manager" dir="MovieManager"
				includes="${mainFiles}">

				<!--
					<include name="config/"/> <exclude name="config/Config.ini"/>
				-->
			</zipfileset>

			<zipfileset prefix="MeDs-Movie-Manager/config/" dir="MovieManager/config/"
				includes="${config_file_list}" />

			<!-- Config file for log4j  -->
			<zipfileset prefix="MeDs-Movie-Manager/config/" dir="${dist}"
				includes="log4j.properties">
			</zipfileset>

			<!-- Files for the report generator  -->
			<zipfileset prefix="MeDs-Movie-Manager/reports/" dir="MovieManager/reports/"
				includes="*.jasper, *.png, *.jrxml" />

			<!-- libraries -->
			<zipfileset prefix="MeDs-Movie-Manager/lib/" dir="MovieManager/lib/"
				includes="${library_file_list_all}" />

			<zipfileset prefix="MeDs-Movie-Manager/lib/LookAndFeels/"
				dir="${dist}" includes="lookAndFeels.ini">
			</zipfileset>

			<!-- html template files -->
			<zipfileset id="template_simple_virtue" prefix="MeDs-Movie-Manager/HTML_templates/"
				dir="MovieManager/HTML_templates/" includes="${template_files}" />


			<zipfileset prefix="MeDs-Movie-Manager" dir="" includes="${infoFiles}" />

		</zip>



		<!-- Creating Source zip MovieManager.v.version.src.zip  Mirror  -->
		<zip destfile="${dist}/MovieManager.v.${versionName}.src.zip"
			update="false" compress="true">

			<zipfileset prefix="MeDs-Movie-Manager-Source/MovieManager"
				dir="MovieManager" includes="MovieManager.exe, Applet.html, Icon.ico">

				<include name="reports/" />
				<include name="codecs/" />
				<include name="images/" />
				<include name="queries/" />
				<include name="source/" />
				<include name="test/" />

			</zipfileset>

			<!-- config -->
			<zipfileset prefix="MeDs-Movie-Manager-Source/MovieManager/config/"
				dir="MovieManager/config/" includes="${config_file_list}" />

			<!-- Config file for log4j  -->
			<zipfileset prefix="MeDs-Movie-Manager-Source/MovieManager/config/"
				dir="${dist}" includes="log4j.properties" />

			<!-- Config file for Eclipse project file  -->
			<zipfileset prefix="MeDs-Movie-Manager-Source/"
				dir="${dist}" includes=".project,.classpath" />
			
			<!-- libraries -->
			<zipfileset prefix="MeDs-Movie-Manager-Source/MovieManager/lib/"
				dir="MovieManager/lib/" includes="${library_file_list_all}" />

			<!-- ant-contrib only needed for source distribution -->
			<zipfileset prefix="MeDs-Movie-Manager-Source/MovieManager/lib/" dir="MovieManager/lib/"
						includes="ant-contrib-0.6.jar" />
			
			<zipfileset
				prefix="MeDs-Movie-Manager-Source/MovieManager/lib/LookAndFeels/"
				dir="${dist}" includes="lookAndFeels.ini">
			</zipfileset>



			<!-- Simple Virtue template -->
			<zipfileset id="template_simple_virtue"
				prefix="MeDs-Movie-Manager-Source/MovieManager/HTML_templates/" dir="MovieManager/HTML_templates/"
				includes="${template_files}" />


			<zipfileset prefix="MeDs-Movie-Manager-Source" dir=""
				includes="${infoFiles}">
				
			    <include name="Readme.txt" />
				<include name="Changelog.txt" />
				<include name="xmm.css" />
				<include name="packaging/" />
				<include name="makejar.bat" />
				<include name="compile.bat" />
				<include name="run.bat" />
				<include name="SignJar.bat" />
				<include name="Manifest.txt" />
				<include name="build.xml" />
				<include name="So how do I get this thing running.txt" />
				<exclude name="dist/" />
			</zipfileset>
			
			<zipfileset prefix="MeDs-Movie-Manager-Source" dir="" filemode="755">
							<include name="makejar.sh" />
							<include name="compile.sh" />
							<include name="run.sh" />
			</zipfileset>

		</zip>
	</target>



	<target name="jars" description="Creates the MovieManager.jar file"
			depends="jar, IMDb-lib"/>
	

	<target name="jar" description="Creates the MovieManager.jar file"
		depends="compile">

		<!-- Ensure that the timestamp has been set -->
		<tstamp />

		<jar destfile="MovieManager/MovieManager.jar" manifest="Manifest.txt">

			<fileset dir="MovieManager/">

				<include name="net/" />
				<include name="codecs/" />
				<include name="images/" />
				<include name="queries/" />
				<include name="config/MovieManager.tmx" />
				<include name="config/internalConfig.ini" />
				<include name="config/plugins.ini" />
			
				<exclude name="net/sf/xmm/moviemanager/http/" />
				<exclude name="net/sf/xmm/moviemanager/models/imdb/" />
				<exclude name="net/sf/xmm/moviemanager/gui/imdb/" />
				
			</fileset>
			
			<manifest>
			  <section name="MeD's Movie Manager">
				<attribute name="Implementation-Version" value="${version}" />
				<attribute name="Built-By" value="some one on ${TODAY}" />
				<!--<attribute name="Name" value="Movie Manager version ${version}" />-->
				
			  </section>
			</manifest>
		</jar>
	</target>



	<target name="IMDb-lib" description="Create the IMDB.jar file." depends="compile">
	  
	  <!-- Ensure that the timestamp has been set -->
	  <tstamp />
	  
	  <jar destfile="MovieManager/lib/IMDb.jar" basedir="MovieManager/"
		   includes="net/sf/xmm/moviemanager/util/StringUtil.class">
		<fileset dir="MovieManager/">
		  <include name="net/sf/xmm/moviemanager/http/"/>
		  <include name="net/sf/xmm/moviemanager/models/imdb/"/>
		  <include name="net/sf/xmm/moviemanager/gui/imdb/"/>
		</fileset>
		
		<!--
			<fileset dir="MovieManager/"
					 includes="net/sf/xmm/moviemanager/models/ModelIMDB.java,
							   net/sf/xmm/moviemanager/util/StringUtil.java "/>
			-->
		
		<manifest>
		  <attribute name="Main-Class" value="net.sf.xmm.moviemanager.gui.imdb.DialogAboutIMDb" />
		</manifest>
		
		</jar>
	</target>


	<target name="izpack" depends="predist">
		<ant antfile="packaging/izpack/build-izpack.xml" target="makeIzpackInstaller"
			inheritAll="true" inheritrefs="true" />
	</target>


	<!--
		<target name="dist-mac" > <ant antfile="packaging/mac/build-mac.xml"
		target="dist-mac" inheritAll="true" inheritrefs="true"/> </target>

		<target name="build-mac" > <ant antfile="packaging/mac/build-mac.xml"
		target="build-mac" inheritAll="true" inheritrefs="true"/> </target>
	-->

	<!--
		removes all tabs replaces those with spaces and removes unqualified
		EOL and replaces those with the correct EOL
	-->
	<target name="remove-crlf"
		description="removes all tabs and 
										  unqualified end of lines">
		<fixcrlf srcdir="${source}" eol="lf" tab="remove" tablength="4"
			javafiles="yes" includes="**/*.java" />
	</target>

	<!-- generates the javadoc -->
	<target name="javadoc" depends="compile">

		<mkdir dir="${dist}/javadoc/" />

		<javadoc destdir="${dist}/javadoc/" author="true" version="true"
			private="true" use="true" windowtitle="MeD's Movie Manager Javadoc"
			classpathref="project.classpath" sourcepath="MovieManager/source/"
			packagenames="net.sf.*">
			<doctitle>MeD's Movie Manager API Documentation</doctitle>
		</javadoc>
	</target>



	<target name="clean" description="clean up">

		<mkdir dir="${dist}" />

		<!--  Delete files and directories in dist -->
		<delete includeemptydirs="true">
			<fileset dir="${dist}" includes="**/*" />
		</delete>

		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${build}/net" />
		</delete>
		

		<delete file="${build}/MovieManager.jar" />
		<delete file="${build}/lib/IMDb.jar" />
	</target>



	<!--  For signing java applet  -->

	<target name="sign" depends="jar, generate-keys"
		description="Signs the generated jar file">
		<signjar jar="${base}/MovieManager.jar" keystore="keys"
			storepass="${storepass}" keypass="${keypass}" signedjar="MovieManager.jar"
			alias="signFiles" />
		<exec executable="keytool">
			<arg line="-export" />
			<arg line="-keystore keys" />
			<arg line="-storepass ${storepass}" />
			<arg line="-alias signFiles" />
			<arg line="-file MovieManager.cer" />
		</exec>
		<delete file="${base}/MovieManager.jar" />
		<delete file="${base}/MovieManager.cer" />
		<move file="MovieManager.jar" todir="${base}" />
		<move file="MovieManager.cer" todir="${base}" />
	</target>

	<target name="generate-keys" description="Generates keys if they don't exist"
		unless="keys">
		<genkey alias="signFiles" keystore="keys" keypass="${keypass}"
			storepass="${storepass}"
			dname="CN=MeDs Movie Manager, OU=MeD's Movie Manager, O=xmm.sf.net, C=INT" />
	</target>
	
	<!-- Carriage return, hex value 0xD -->
	<property name="newline" value="&#xD;" />

	<target name="makeLookAndFeelIni"
		description="Creates a lookAndFeels.ini file used in the distribution packages.">

		<!-- Since new line is added, a carriage return i added before to be windows compatible -->
		<echo file="${dist}/lookAndFeels.ini" append="false">${newline}
Here you can add new Look and Feels's.${line.separator}${newline}
Make sure the look and Feel jar-file is placed in the 'LookAndFeels' directory${newline}
and that the correct class is given below.${newline}
The name and classname must be enclosed in quotes.${newline}
The names may be set to whatever fit your needs.${newline}
${newline}
# Name                                   Class name                                                         Java version   System${newline}
${newline}
"Liquid"                                 "com.birosoft.liquid.LiquidLookAndFeel"                                "1.5"${newline}
"JTattoo - Acryl"                        "com.jtattoo.plaf.acryl.AcrylLookAndFeel"                              "1.4"${newline}
"JTattoo - Aero"                         "com.jtattoo.plaf.aero.AeroLookAndFeel"                                "1.4"${newline}
"JTattoo - Aluminium"                    "com.jtattoo.plaf.aluminium.AluminiumLookAndFeel"                      "1.4"${newline}
"JTattoo - Bernstein"                    "com.jtattoo.plaf.bernstein.BernsteinLookAndFeel"                      "1.4"${newline}
"JTattoo - Fast"                         "com.jtattoo.plaf.fast.FastLookAndFeel"                                "1.4"${newline}
"JTattoo - HiFi"                         "com.jtattoo.plaf.hifi.HiFiLookAndFeel"                                "1.4"${newline}
"JTattoo - McWin"                        "com.jtattoo.plaf.mcwin.McWinLookAndFeel"                              "1.4"${newline}
"JTattoo - Mint"                         "com.jtattoo.plaf.mint.MintLookAndFeel"                                "1.4"${newline}
"JTattoo - Noire"                        "com.jtattoo.plaf.noire.NoireLookAndFeel"                              "1.4"${newline}
"JTattoo - Smart"                        "com.jtattoo.plaf.smart.SmartLookAndFeel"                              "1.4"${newline}
"JTattoo - Luna"                         "com.jtattoo.plaf.luna.LunaLookAndFeel"                                "1.4"${newline}
${newline}
"Substance - Autumn"                     "org.jvnet.substance.skin.SubstanceAutumnLookAndFeel"                  "1.6"${newline}
"Substance - Business Black Steel"       "org.jvnet.substance.skin.SubstanceBusinessBlackSteelLookAndFeel"      "1.6"${newline}
"Substance - Business Blue Steel"        "org.jvnet.substance.skin.SubstanceBusinessBlueSteelLookAndFeel"       "1.6"${newline}
"Substance - Business"                   "org.jvnet.substance.skin.SubstanceBusinessLookAndFeel"                "1.6"${newline}
"Substance - Challenger Deep"            "org.jvnet.substance.skin.SubstanceChallengerDeepLookAndFeel"          "1.6"${newline}
"Substance - CremeCoffee"                "org.jvnet.substance.skin.SubstanceCremeCoffeeLookAndFeel"             "1.6"${newline}
"Substance - Creme"                      "org.jvnet.substance.skin.SubstanceCremeLookAndFeel"                   "1.6"${newline}
"Substance - EmeraldDusk"                "org.jvnet.substance.skin.SubstanceEmeraldDuskLookAndFeel"             "1.6"${newline}
"Substance - Magma"                      "org.jvnet.substance.skin.SubstanceMagmaLookAndFeel"                   "1.6"${newline}
"Substance - MistAqua"                   "org.jvnet.substance.skin.SubstanceMistAquaLookAndFeel"                "1.6"${newline}
"Substance - MistSilver"                 "org.jvnet.substance.skin.SubstanceMistSilverLookAndFeel"              "1.6"${newline}
"Substance - Moderate"                   "org.jvnet.substance.skin.SubstanceModerateLookAndFeel"                "1.6"${newline}
"Substance - NebulaBrickWall"            "org.jvnet.substance.skin.SubstanceNebulaBrickWallLookAndFeel"         "1.6"${newline}
"Substance - Nebula"                     "org.jvnet.substance.skin.SubstanceNebulaLookAndFeel"                  "1.6"${newline}
"Substance - Office Blue 2007"           "org.jvnet.substance.skin.SubstanceOfficeBlue2007LookAndFeel"          "1.6"${newline}
"Substance - OfficeSilver2007"           "org.jvnet.substance.skin.SubstanceOfficeSilver2007LookAndFeel"        "1.6"${newline}
"Substance - Raven Graphite Glass"       "org.jvnet.substance.skin.SubstanceRavenGraphiteGlassLookAndFeel"      "1.6"${newline}
"Substance - Raven Graphite"             "org.jvnet.substance.skin.SubstanceRavenGraphiteLookAndFeel"           "1.6"${newline}
"Substance - Raven"                      "org.jvnet.substance.skin.SubstanceRavenLookAndFeel"                   "1.6"${newline}
"Substance - Sahara"                     "org.jvnet.substance.skin.SubstanceSaharaLookAndFeel"                  "1.6"${newline}
${newline}
"Synthetica Default"                     "de.javasoft.plaf.synthetica.SyntheticaStandardLookAndFeel"            "1.5"${newline}
"Synthetica BlackStar"                   "de.javasoft.plaf.synthetica.SyntheticaBlackStarLookAndFeel"           "1.5"${newline}
"Synthetica BlueSteel"                   "de.javasoft.plaf.synthetica.SyntheticaBlueSteelLookAndFeel"           "1.5"${newline}
"Synthetica BlackMoon"                   "de.javasoft.plaf.synthetica.SyntheticaBlackMoonLookAndFeel"           "1.5"${newline}
"Synthetica BlueMoon"                    "de.javasoft.plaf.synthetica.SyntheticaBlueMoonLookAndFeel"            "1.5"${newline}
"Synthetica SilverMoon"                  "de.javasoft.plaf.synthetica.SyntheticaSilverMoonLookAndFeel"          "1.5"${newline}
"Synthetica BlueIce"                     "de.javasoft.plaf.synthetica.SyntheticaBlueIceLookAndFeel"             "1.5"${newline}
"Synthetica GreenDream"                  "de.javasoft.plaf.synthetica.SyntheticaGreenDreamLookAndFeel"          "1.5"${newline}
${newline}
"Kunststoff"                             "com.incors.plaf.kunststoff.KunststoffLookAndFeel"                     "1.4"${newline}
${newline}
"Jgoodies windows"                       "com.jgoodies.looks.windows.WindowsLookAndFeel"                        "1.4"     "Windows"${newline}
"Jgoodies Plastic"                       "com.jgoodies.looks.plastic.PlasticLookAndFeel"                        "1.4"${newline}
"Jgoodies Plastic 3D"                    "com.jgoodies.looks.plastic.Plastic3DLookAndFeel"                      "1.4"${newline}
"Jgoodies PlasticXP"                     "com.jgoodies.looks.plastic.PlasticXPLookAndFeel"                      "1.4"${newline}
${newline}
"Office 2003"                            "org.fife.plaf.Office2003.Office2003LookAndFeel"                       "1.4"     "Windows"${newline}
"Office XP"                              "org.fife.plaf.OfficeXP.OfficeXPLookAndFeel"                           "1.4"     "Windows"${newline}
"Office VisualStudio 2005"               "org.fife.plaf.VisualStudio2005.VisualStudio2005LookAndFeel"           "1.4"     "Windows"${newline}
${newline}
"Pagosoft"                               "com.pagosoft.plaf.PgsLookAndFeel"                                     "1.4"${newline}
"InfoNode"                               "net.infonode.gui.laf.InfoNodeLookAndFeel"                             "1.4"${newline}
"Compiere"                               "org.compiere.plaf.CompiereLookAndFeel"                                "1.5"${newline}
"Squareness"                             "net.beeger.squareness.SquarenessLookAndFeel"                          "1.4"${newline}
"Lipstik"                                "com.lipstikLF.LipstikLookAndFeel"                                     "1.5"${newline}
"eaSynth"                                "com.easynth.lookandfeel.EaSynthLookAndFeel"                           "1.5"${newline}
"NimROD"                                 "com.nilo.plaf.nimrod.NimRODLookAndFeel"                               "1.5"${newline}
</echo>

	</target>


	<target name="makeLog4jProperties"
		description="Creates a log4j.properties to be used in the binary package where only warnings/error are printed to log.">

	  <echo file="${dist}/log4j.properties" append="false">
#### Using two appenders, one to log to console, another to log to a file.
log4j.rootCategory=ALL, stdout, FileAppender

#### First appender writes to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

# Setting the lowest priority to log
log4j.appender.stdout.Threshold=WARN

# Setting layout
log4j.appender.stdout.layout=net.sf.xmm.moviemanager.util.PatternLayoutByLevel

# Set default format for log levels not specifically set
log4j.appender.stdout.layout.ConversionPattern = %d{ISO8601} %-5p [%t] %m%n

# Set formats for different log levels
log4j.appender.stdout.layout.InfoPattern = %-5p %m%n
log4j.appender.stdout.layout.DebugPattern = %-5p %m%n
log4j.appender.stdout.layout.WarnPattern =  %-5p %l%n %m%n
log4j.appender.stdout.layout.ErrorPattern = %-5p %l%n %m%n
log4j.appender.stdout.layout.FatalPattern = %-5p %l%n %m%n

#### Second appender writes to file
log4j.appender.FileAppender=org.apache.log4j.RollingFileAppender
#log4j.appender.FileAppender.File=Log.txt

# Setting the lowest priority to log
log4j.appender.FileAppender.Threshold=ALL

# Control the maximum log file size
log4j.appender.FileAppender.MaxFileSize=300KB

# Setting layout
log4j.appender.FileAppender.layout=net.sf.xmm.moviemanager.util.PatternLayoutByLevel

# Set default format for log levels not specifically set
log4j.appender.FileAppender.layout.ConversionPattern = %d{ISO8601} %-5p [%t] %m%n

# Set formats for different log levels
log4j.appender.FileAppender.layout.InfoPattern = %-5p %m%n
log4j.appender.FileAppender.layout.DebugPattern = %-5p %m%n
log4j.appender.FileAppender.layout.WarnPattern =  %-5p %l%n %m%n
log4j.appender.FileAppender.layout.ErrorPattern = %-5p %l%n %m%n
log4j.appender.FileAppender.layout.FatalPattern = %-5p %l%n %m%n
</echo>

</target>


	
<target name="makeEclipseProjectFiles"
		description="Creates a eclipse project file to be used in the source package.">
	
	<echo file="${dist}/.project" append="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;projectDescription&gt;
	&lt;name&gt;MovieManager&lt;/name&gt;
	&lt;comment&gt;&lt;/comment&gt;
	&lt;projects&gt;
	&lt;/projects&gt;
	&lt;buildSpec&gt;
		&lt;buildCommand&gt;
			&lt;name&gt;org.eclipse.jdt.core.javabuilder&lt;/name&gt;
			&lt;arguments&gt;
			&lt;/arguments&gt;
		&lt;/buildCommand&gt;
	&lt;/buildSpec&gt;
	&lt;natures&gt;
		&lt;nature&gt;org.eclipse.jdt.core.javanature&lt;/nature&gt;
	&lt;/natures&gt;
&lt;/projectDescription&gt;
    </echo>

<echo file="${dist}/.classpath" append="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;classpath&gt;
	&lt;classpathentry kind="src" path="MovieManager/source"/&gt;
	&lt;classpathentry kind="src" path="MovieManager/test"/&gt;
	&lt;classpathentry excluding="source/|test/" kind="src" path="MovieManager"/&gt;
	&lt;classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/cobra/cobra-0.98.2.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/cobra/js.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/BrowserLauncher2-1_3.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/commons-beanutils.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/commons-codec-1.3.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/commons-collections-3.2.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/commons-digester-1.7.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/commons-httpclient-3.0.1.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/commons-logging-1.1.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/gettext-commons-0.9.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/itext-1.4.5.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/jasperreports-3.0.0.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/jxl.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/log4j-1.2.15.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/ostermillerutils_1_05_00_for_java_1_4.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/poi-2.5.1-final-20040804.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/ProportionLayout.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/TableLayout.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/useful.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/xercesImpl.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/xml-apis.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/castor-1.2.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/mac/AppleJavaExtensions.jar"/&gt;
	&lt;classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/skinlf.jar"/&gt;
	&lt;classpathentry kind="lib" path="MovieManager/lib/jna-3.2.4.jar"/&gt;
	&lt;classpathentry kind="output" path="MovieManager"/&gt;
&lt;/classpath&gt;
</echo>
	
</target>

	
<!-- Finds the path to rst2html which generates te restructed text version of changelog and readme  -->
<target name="find-rst2html">
  
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
	<classpath><pathelement location="${ant-contrib-path}"/></classpath>
  </taskdef>

  <!-- docutils can be installed both with and without py extension  -->
  <exec executable="which" outputproperty="rst2html-path">
 	<arg value="rst2html"/>
  </exec>
  
  <exec executable="which" outputproperty="rst2html.py-path">
 	<arg value="rst2html.py"/>
  </exec>
  
  <if>
	<not>
	  <equals arg1="${rst2html-path}" arg2="" />
	</not>
	
	<then>
	  <property name="rst2html-pathToUse" value="${rst2html-path}"/>
	</then>
	
	<elseif>
	  <not>
		<equals arg1="${rst2html.py-path}" arg2="" />
	  </not>
	  
	  <then>
		<property name="rst2html-pathToUse" value="${rst2html.py-path}"/>
	  </then>
	</elseif>
	
	<else>
	  <echo message="rst2html could not be found" />
	</else>
  </if>
</target>


<!-- Changelog -->
<target name="changelog" depends="find-rst2html">
  
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
	<classpath>
      <pathelement location="${ant-contrib-path}"/>
	</classpath>
  </taskdef>
  
  
  <fail message="rst2html was not found, changelog can not be generated.">
	<condition>
      <not>
		<isset property="rst2html-pathToUse"/>
      </not>
	</condition>
  </fail>
  
	
  <exec executable="${rst2html-pathToUse}">
	<arg value="--stylesheet=xmm.css"/>
	<arg value="Changelog.txt"/>
	<arg value="Changelog.html"/>
  </exec>
  
  <echo> Compiled html changelog to Changelog.html </echo>
	 
</target>
	

<!-- Readme -->
<target name="readme" depends="find-rst2html">

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
	<classpath>
      <pathelement location="${ant-contrib-path}"/>
	</classpath>
  </taskdef>
  
  
  <fail message="rst2html was not found, readme can not be generated.">
	<condition>
      <not>
		<isset property="rst2html-pathToUse"/>
      </not>
	</condition>
  </fail>
  
  <exec executable="rst2html">
    <arg value="--stylesheet=xmm.css"/>
    <arg value="Readme.txt"/>
    <arg value="Readme.html"/>
  </exec>
        
  <echo> Compiled html readme to Readme.html </echo>
</target>

	
<!-- not functioning yet -->
  <target name="doParams">
    <antcall target="tokenize">
       <param name="params" value="${jdbc.driver.properties}"/>
    </antcall>
  </target>
        
  
  <target name="tokenize">
        
        <script language="beanshell" setbeans="true">
               System.out.println("Hello world");
                        
        </script>

  </target>




  <property name="app-name" value="MeD's MovieManager.app"/>
  <property name="dmg-file" value="MovieManager.v.${versionName}.dmg"/>
  <property name="mac-dist" value="${dist}/mac"/>

	
	

 <!-- BUILD Mac  -->
 <target name="build-mac" depends="predist">

	  <echo message="build-mac: ${ant.file}"/>

    	<property name="tempdir" value="${mac-dist}/temp.app"/>

	 <!--	<delete verbose="true" dir="${mac-dist}/${app-name}"/> -->

	    <mkdir dir="${tempdir}"/>
	    <mkdir dir="${tempdir}/Contents"/>
	    <mkdir dir="${tempdir}/Contents/MacOS"/>
	    <mkdir dir="${tempdir}/Contents/Resources"/>
	    <mkdir dir="${tempdir}/Contents/Resources/Java"/>
		<mkdir dir="${tempdir}/Contents/Resources/Java/config"/>

   		<copy file="packaging/mac/resources/JavaApplicationStub" todir="${tempdir}/Contents/MacOS"/>

		<copy file="${dist}/log4j.properties" todir="${tempdir}/Contents/Resources/Java/config"/>
 		<copy file="${dist}/lookAndFeels.ini" todir="${tempdir}/Contents/Resources/Java/lib/LookAndFeels/"/>
 		 	
		<copy file="MovieManager/config/MovieManager.tmx" todir="${tempdir}/Contents/Resources/Java/config"/>
    	<copy file="MovieManager/config/castor.properties" todir="${tempdir}/Contents/Resources/Java/config"/>
    	<copy file="MovieManager/config/mapping.xml" todir="${tempdir}/Contents/Resources/Java/config"/>
    	

		<copy todir="${tempdir}/Contents/Resources/Java/reports">
    		<fileset dir="MovieManager/reports">
        		<include name="**/*"/>
   			</fileset>
		</copy>
		
		<copy todir="${tempdir}/Contents/Resources/Java/HTML_templates">
		  
		  <!-- html template files -->
		  <fileset dir="MovieManager/HTML_templates/" 
				   includes="${template_files}"/>
		</copy>
		

		<exec executable="chmod">
			<arg line="755 ${tempdir}/Contents/MacOS/JavaApplicationStub"/>
		</exec>


 		<copy file="packaging/mac/resources/Info.plist" todir="${tempdir}/Contents"/>
 		<copy file="packaging/mac/resources/PkgInfo" todir="${tempdir}/Contents"/>
		<copy file="packaging/mac/resources/MovieManager.icns" todir="${tempdir}/Contents/Resources"/>
		<copy file="MovieManager/MovieManager.jar" todir="${tempdir}/Contents/Resources/Java"/>
	
		<copy todir="${tempdir}/Contents/Resources/Java/lib">
		  <fileset dir="MovieManager/lib"
				   includes="${library_file_list_mac}"
				   >
		  </fileset>
		</copy>
		
		<!--
		<exec executable="/Developer/Tools/SetFile">
			<arg line=" -a B ${tempdir}"/>
		</exec>
		-->

		
		<move file="${tempdir}" tofile="${mac-dist}/${app-name}"/>
 </target>
    
 <target name="install-mac" depends="build-mac">
   <move file="${mac-dist}/${app-name}" tofile="/Applications/${app-name}"/>
 </target>
 
	
	
 <condition property="isOSX"><os name="Mac OS X"/> </condition>  
	
	<condition property="isNotOSX">
		 <not>
		  <os name="Mac OS X"/>
	     </not>
	</condition>  
		
	<target name="isMacCheckAlert" if="isNotOSX">
		   <echo>This is not OS X. Must run OS X to create dmg bundle.</echo>
	 </target>
	
  <!-- DIST Mac  -->
 <target name="dist-mac" depends="build-mac, isMacCheckAlert" if="isOSX">
   
   <echo message="dist-mac: ${ant.file}"/>
   
 	<!-- Copy license files  -->
 	    <mkdir dir="${mac-dist}/License"/>
 	    <copy todir="${mac-dist}/License">
 	         <fileset dir="License"/>
 	    </copy>

 	<copy file="Readme.html" todir="${mac-dist}"/>
 	<copy file="Changelog.html" todir="${mac-dist}"/>
 	 	
    <fileset file="*.dmg" />
 	
 	<!-- Delete old file  -->
    <delete file="${mac-dist}/${dmg-file}"/>
 	
		<exec executable="hdiutil" failonerror="true">
			<arg value="create"/>
			<arg value="-srcfolder"/>
			<arg value="${mac-dist}/"/>
			<arg value="-fs"/>
			<arg value="HFS+"/>
			<arg value="-volname"/>
			<arg value="MeD's Movie Manager"/>
			<arg value="${mac-dist}/temp.dmg"/>
			<arg value="-ov"/>
		</exec>
    	
    	<exec executable="hdiutil" failonerror="true">
    		<arg line="convert ${mac-dist}/temp.dmg -format UDZO -imagekey zlib-level=-9 -o ${mac-dist}/${dmg-file} -ov"/>
    	</exec>
    	<delete file="${mac-dist}/temp.dmg"/>
 	
 	    <move file="${mac-dist}/${dmg-file}" todir="${dist}"/>
 		
    </target>

	<target name="run-mac">
	  <exec executable="open">
		<arg line="${mac-dist}/"/>
	  </exec>
	</target>



</project>




